// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TzRoutim.Model;

#nullable disable

namespace TzRoutim.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TzRoutim.Model.Entity.GitEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("HtmlUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SearchId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("StargazersCount")
                        .HasColumnType("int");

                    b.Property<int?>("SubscribersCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SearchId");

                    b.ToTable("GitEntities");
                });

            modelBuilder.Entity("TzRoutim.Model.Entity.Search", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("StringSearch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Searches");
                });

            modelBuilder.Entity("TzRoutim.Model.Entity.GitEntity", b =>
                {
                    b.HasOne("TzRoutim.Model.Entity.Search", "Search")
                        .WithMany("GitEntity")
                        .HasForeignKey("SearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Search");
                });

            modelBuilder.Entity("TzRoutim.Model.Entity.Search", b =>
                {
                    b.Navigation("GitEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
